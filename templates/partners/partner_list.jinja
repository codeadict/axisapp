{% extends "page.jinja" %}

{% import 'macro/display_functions.jinja' as display with context %}

{% block module_icon %}<i class="glyphicon glyphicon-user"></i> {% endblock %}

{% block content %}
  <div role="tabpanel" class="tab-pane active" id="listtab">
    <div class="row">
      <div class="col-md-12">
        {% if object_list %}
          {% for object in object_list %}
            <div class="panel panel-custom">
              <div class="panel-heading">
                <h3 class="panel-title">
                  {% if detail_view %}
                    <a href="{{ url(detail_view, pk=object.pk) }}">{{ get_item_title(object) }}</a>
                  {% else %}
                    {{ get_item_title(object) }}
                  {% endif %}
                </h3>
              </div>
              <div class="panel-body">
                {{ display.showobject_with_image(object, detail_view) }}
              </div>
            </div>
          {% endfor %}
          {{ display.pagination(page_obj) }}
        {% else %}
          <h3>No existen {{ plural_name }}. Puede comenzar agregando uno.</h3>
        {% endif %}
      </div>
    </div>
  </div>
  <div role="tabpanel" class="tab-pane active" id="maptab">
    <div class="row" id="maprow">
      <div class="col-md-{% if search_form %}9{% else %}12{% endif %} height-css">
        <div id="map"><span class="loading">{{ _('Loading Clients...') }}</span></div>
      </div>
      {% include "partners/common_search_form.jinja" %}
    </div>
  </div>
{% endblock %}

{% block extra_js %}
  <script src="http://maps.google.com/maps/api/js?v=3.exp&sensor=false&region=ec"></script>
  <script src="{{ "libs/js/markerclusterer_compiled.js"|static }}{{ '?' if debug }}"></script>

  <script>

    $('.map-go-fullscreen').on('click', function () {
      var element = map.getDiv();
      if (element.requestFullScreen) {
        element.requestFullScreen();
      }
      if (element.webkitRequestFullScreen) {
        element.webkitRequestFullScreen();
      }
      if (element.mozRequestFullScreen) {
        element.mozRequestFullScreen();
      }
    });

    $(document).ready(function () {
      var zoom = 14;
      var lat = -0.180653;
      var lng = -78.467834;

      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {
          lat = position.coords.latitude;
          lng = position.coords.longitude;
        }, function () {
          var lat = -0.180653;
          var lng = -78.467834;
        });
      }

      var hash = window.location.hash;
      if (hash.indexOf('#') === 0) {
        hash = hash.substr(1);
      }
      var args = hash.split("/");
      if (args.length == 3) {
        zoom = parseInt(args[0], 10),
                lat = parseFloat(args[1]),
                lng = parseFloat(args[2]);
      }

      var mapOptions = {
        zoom: zoom,
        center: new google.maps.LatLng(lat, lng),
        mapTypeControl: true,
        navigationControl: true,
        streetViewControl: false,
        scaleControl: false,
        zoomControl: true,
        panControl: false,
        zoomControlOptions: {
          style: google.maps.ZoomControlStyle.SMALL
        },
        mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU},
        mapTypeId: google.maps.MapTypeId.SATELLITE
      };

      map = new google.maps.Map($('#map')[0], mapOptions);

      var markers = [];
      {% for client in object_list %}
        latlng = new google.maps.LatLng("{{ client.coordenadas.y }}", "{{ client.coordenadas.x }}");
        var marker = new google.maps.Marker({
          position: latlng,
          title: "{{ client.get_identif() }}: {{ client.get_full_name() }}",
          //url: "{{ client.get_absolute_url() }}"
          url: "{{ client.get_admin_url() }}"
        });
        google.maps.event.addListener(marker, 'click', function () {
          window.location.href = marker.url;
        });
        markers.push(marker);
      {% endfor %}
      var markerCluster = new MarkerClusterer(map, markers);


      map.data.loadGeoJson('{{ url('poligonos_data') }}');
    });
  </script>
{% endblock %}

